---
- name: Install fzf
  tags:
    - fzf
  block:
    - name: Find latest version of fzf
      ansible.builtin.uri:
        url: https://github.com/junegunn/fzf/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: fzf_latest
    - name: Download fzf
      ansible.builtin.unarchive:
        src: "https://github.com/junegunn/fzf/releases/download/\
          {{ fzf_latest.json.tag_name }}/fzf-{{ fzf_latest.json.tag_name | replace('v', '') }}-\
          {{ ansible_system }}_{{ fzf[ansible_system][ansible_architecture] }}.tar.gz"
        dest: $HOME/.local/bin/
        include:
          - fzf
        keep_newer: true
        remote_src: true
        mode: "0755"
- name: Install neovim
  tags:
    - nvim
  block:
    - name: Set neovim facts
      ansible.builtin.set_fact:
        neovim_system: "{{ 'macos' if ansible_system == 'Darwin' else ansible_system | lower }}"
    - name: Create temp directory for neovim
      ansible.builtin.file:
        path: $HOME/.local/nvim
        state: directory
        mode: "0755"
    - name: Download neovim
      ansible.builtin.unarchive:
        # ansible_system might be macos not Darwin.
        src: https://github.com/neovim/neovim/releases/latest/download/nvim-{{ neovim_system }}-{{ neovim[ansible_system][ansible_architecture] }}.tar.gz
        remote_src: true
        keep_newer: true
        mode: "0755"
        dest: $HOME/.local/nvim
        extra_opts:
          - --strip-components=1
    - name: Symlink nvim
      ansible.builtin.file:
        src: $HOME/.local/nvim/bin/nvim
        dest: $HOME/.local/bin/nvim
        state: link
- name: Install ripgrep
  tags:
    - ripgrep
  block:
    - name: Find latest version of ripgrep
      ansible.builtin.uri:
        url: https://github.com/BurntSushi/ripgrep/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: ripgrep_latest
    - name: Set ripgrep facts
      ansible.builtin.set_fact:
        ripgrep_dir: "ripgrep-{{ ripgrep_latest.json.tag_name }}-{{ ripgrep[ansible_system][ansible_architecture] }}-\
            {{ 'apple' if ansible_system == 'Darwin' else 'unknown' }}-{{ ansible_system | lower }}\
            {{ '-musl' if ansible_architecture == 'x86_64' else '-gnu' if ansible_system == 'Linux' else '' }}"
    - name: Install ripgrep
      ansible.builtin.unarchive:
        # ripgrep-14.1.1-x86_64-unknown-linux-musl.tar.gz
        # ripgrep-14.1.1-x86_64-apple-darwin.tar.gz
        # ripgrep-14.1.1-aarch64-apple-darwin.tar.gz
        # ripgrep-14.1.1-aarch64-unknown-linux-gnu.tar.gz
        src: "https://github.com/BurntSushi/ripgrep/releases/download/{{ ripgrep_latest.json.tag_name }}/{{ ripgrep_dir }}.tar.gz"
        dest: $HOME/.local/bin/
        include:
          - "{{ ripgrep_dir }}/rg"
        keep_newer: true
        remote_src: true
        mode: "0755"
        extra_opts:
          - --strip-components=1
        creates: $HOME/.local/bin/rg
- name: Install fd
  tags:
    - fd
  block:
    - name: Find latest version of fd
      ansible.builtin.uri:
        url: https://github.com/sharkdp/fd/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: fd_latest
    - name: Set fd facts
      ansible.builtin.set_fact:
        fd_dir_name: "fd-{{ fd_latest.json.tag_name }}-{{ fd[ansible_system][ansible_architecture] }}-\
          {{ 'apple' if ansible_system == 'Darwin' else 'unknown' }}-{{ ansible_system | lower }}\
          {{ '-gnu' if ansible_system == 'Linux' else '' }}"
    - name: Install fd
      ansible.builtin.unarchive:
        src: "https://github.com/sharkdp/fd/releases/download/\
          {{ fd_latest.json.tag_name }}/{{ fd_dir_name }}.tar.gz"
        dest: $HOME/.local/bin/
        include:
          - "{{ fd_dir_name }}/fd"
        keep_newer: true
        remote_src: true
        mode: "0755"
        extra_opts:
          - --strip-components=1
        creates: $HOME/.local/bin/fd
- name: Install tree-sitter
  tags:
    - tree-sitter
  block:
    - name: Create Temp Directory for tree-sitter
      ansible.builtin.tempfile:
        state: directory
      register: tree_sitter_tmp_dir
    - name: Download tree-sitter
      ansible.builtin.get_url:
        # TODO(craig): check ansible_system is Darwin or MacOS
        # https://github.com/tree-sitter/tree-sitter/releases/latest/download/tree-sitter-Darwin-x64.gz

        url: "https://github.com/tree-sitter/tree-sitter/releases/latest/download/\
          tree-sitter-{{ 'macos' if ansible_system == 'Darwin' else 'linux' }}-\
          {{ tree_sitter[ansible_system][ansible_architecture] }}.gz"
        dest: "{{ tree_sitter_tmp_dir.path }}/tree-sitter.gz"
        mode: "0644"
    - name: Install tree-sitter
      community.general.decompress:
        src: "{{ tree_sitter_tmp_dir.path }}/tree-sitter.gz"
        dest: $HOME/.local/bin/tree-sitter
        mode: "0755"
        format: gz
- name: Install yq
  tags:
    - yq
  ansible.builtin.get_url:
    url: https://github.com/mikefarah/yq/releases/latest/download/yq_{{ ansible_system | lower }}_{{ yq[ansible_system][ansible_architecture] }}
    dest: $HOME/.local/bin/yq
    mode: "0755"
